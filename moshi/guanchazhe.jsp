<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>

<html>

  <body>
<h2>观察者模式:</h2><br/>
<br/>定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主体对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。
<br/>
<br/>本质:
<br/>触发联动
<br/>
<br/>别名:
<br/>
<br/>模式-视图  源-监听器   从属者
<br/>1
<br/>优点:
<br/>(1)观察者和目标之间抽象耦合
<br/>(2)动态联动
<br/>(3)支持广播通信
<br/>
<br/>缺点:
<br/>可能引起无耦合操作，由于广播，无论需不需要都会调用update
<br/>
<br/>场景:
<br/>使得耦合性降低
<br/>协调一致，保证高度协作
<br/>
<br/>(1)目标-观察者，一对多
<br/>(2)单向依赖，观察者依赖于目标
<br/>(3)触发通知的时机:完成状态维护后触发
<br/>(4)相互观察:AB观察C，BC观察A
<br/>(5)通知顺序:不依赖通知顺序，多个观察者之间平行，不应有相互依赖关系
<br/>
<br/>抽象主题角色:
<br/>(1)一个目标被多个观察者观察
<br/>(2)目标提供对观察者注册和退订的维护
<br/>(3)目标状态改变，目标通知所有有效的、注册的观察者
  </body>
</html>
