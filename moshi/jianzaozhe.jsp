<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>

<html>

  <body>
<h2>建造者模式:</h2><br/>
<br/>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
<br/>
<br/>对象相当于一个有待建造的产品，零件组合过程被"外部化"到一个建造者对象中
<br/>
<br/>指挥者(过程抽象):
<br/>用来控制建造过程，也用它来隔离用户与建造过程的关联
<br/>
<br/>建造者(实现细节)
<br/>
<br/>使用场景:
<br/>1.产品对象有复杂的内部结构
<br/>2.需生成的产品对象的属性相互依赖，建造者模式可强迫生成顺序
<br/>3.创建过程中使用其他对象(调用其它类对象，放在指挥者中)
<br/>
<br/>优点:
<br/>1.产品内部表象可以独立变化，客户端不知道产品内部组成细节
<br/>2.每一个builder相对独立
<br/>3.所创建的最终产品更易于控制(顺序上)
<br/>
<br/>本质:
<br/>分离整体构建短发和部件构造


  </body>
</html>
