<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>

<html>

  <body>
<h2>状态模式:</h2><br/>
<br/>当一个对象的内在状态改变时允许改变其行为，这个对象看起来像是改变了其类。
<br/>
<br/>将每一个分支封装到独立的类里
<br/>
<br/>本质:
<br/>根据状态来分离和选择行为，状态模式由状态驱动，由上下文负责。
<br/>
<br/>使用背景:
<br/>状态逻辑和动作实现没有分离，系统的扩展性和维护得不到保证。
<br/>
<br/>使用场景:
<br/>工作流场景中考虑状态模式
<br/>
<br/>优点:
<br/>(1)将与特定状态相关的行为局部化，将不同状态的行为分割开来
<br/>(2)消除庞大的条件分支语句，状态转移逻辑分散到state子类之间，减少相互依赖
<br/>(3)显示进行状态转换，不同状态引入独立对象，保证上下文不会发生内部状态不一致状况，只有一个变量记录状态对象
<br/>
<br/>缺点:
<br/>逻辑分散化，状态逻辑分散到很多状态子类中，很难看到整个状态逻辑图
  </body>
</html>
